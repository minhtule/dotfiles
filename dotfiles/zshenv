export ZSH=$HOME/.oh-my-zsh

# use vim as the visual editor
export VISUAL='mate -w'
export EDITOR=vim

# ensure dotfiles bin directory is loaded first
export PATH="$HOME/.bin:/usr/local/sbin:$PATH"
export PATH="$HOME/.rvm/bin:$PATH" # Add RVM to PATH for scripting
export PATH="$HOME/.nenv/bin:$HOME/.nenv/shims:$PATH" # Add NENV to PATH for scripting
export PATH="$ZSH/bin:$PATH"

# Fix PIP's annoying "ValueError: unknown locale: UTF-8"
export LC_ALL=en_US.UTF-8
export LANG=en_US.UTF-8

# Local config
[[ -f ~/.zshenv.local ]] && source ~/.zshenv.local

#######################################
# Setup for nvm
#
# Because .zshenv is loaded before the theme and then the .zshrc,
# we need to load nvm here so the theme can find the node version.

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

#
autoload -U add-zsh-hook
load-nvmrc() {
  local node_version="$(nvm version)"
  local nvmrc_path="$(nvm_find_nvmrc)"

  if [ -n "$nvmrc_path" ]; then
    local nvmrc_node_version=$(nvm version "$(cat "${nvmrc_path}")")

    if [ "$nvmrc_node_version" = "N/A" ]; then
      nvm install
    elif [ "$nvmrc_node_version" != "$node_version" ]; then
      nvm use
    fi
  elif [ "$node_version" != "$(nvm version default)" ]; then
    echo "Reverting to nvm default version"
    nvm use default
  fi
}
add-zsh-hook chpwd load-nvmrc
load-nvmrc

# End of setup for nvm
#######################################
